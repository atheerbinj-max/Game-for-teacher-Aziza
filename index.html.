<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>ูุบุงูุฑุฉ ุงูุตู ูุน ุฃุณุชุงุฐุฉ ุนุฒูุฒุฉ</title>
<style>
  @import url('https://fonts.googleapis.com/css2?family=Cairo&display=swap');
  body {
    font-family: 'Cairo', sans-serif;
    background: linear-gradient(135deg, #fce4ec, #f3e5f5);
    color: #5b2c6f;
    margin: 0; padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    direction: rtl;
  }
  #game-container {
    background: white;
    border-radius: 15px;
    box-shadow: 0 8px 20px rgba(107, 33, 168, 0.3);
    max-width: 600px;
    width: 90%;
    padding: 30px 25px;
    text-align: center;
    position: relative;
  }
  h1, h2 { margin-bottom: 20px; }
  p { font-size: 1.3rem; margin-bottom: 30px; min-height: 80px; }
  button {
    background: #af52bf;
    color: white;
    border: none;
    border-radius: 12px;
    padding: 15px 25px;
    font-size: 1.2rem;
    cursor: pointer;
    margin: 10px 5px;
    transition: background-color 0.3s ease;
    min-width: 180px;
  }
  button:hover { background: #7a2e8e; }
  .hidden { display: none; }
  .floating {
    position: fixed;
    pointer-events: none;
    animation: floatUp 4s ease forwards;
    font-size: 2rem;
    user-select: none;
  }
  @keyframes floatUp {
    0% { opacity: 1; transform: translateY(0) scale(1); }
    100% { opacity: 0; transform: translateY(-150px) scale(1.5); }
  }
</style>
</head>
<body>
  <div id="game-container">
    <div id="screen-1" class="screen">
      <h1>ุฃููุงู ุฃุณุชุงุฐุชูุง ุนุฒูุฒุฉ!</h1>
      <p>ุงูููู ูู ุงูุตูุ ุญุฏุซ ุดูุก ุบุฑูุจโฆ ูู ุฃูุช ุฌุงูุฒุฉ ููุบุงูุฑุชู ุงูุตุบูุฑุฉุ</p>
      <button id="start-btn">ุงุจุฏุฆู ุงููุบุงูุฑุฉ</button>
    </div>

    <div id="screen-2" class="screen hidden">
      <h2>ุฏุฎูุชู ุงูุตู ููุฌุฏุช ุงูุทูุงุจ ูุจุชุณููู ุจุทุฑููุฉ ุบุฑูุจุฉโฆ ูุงุฐุง ุชูุนูููุ</h2>
      <button class="choice-btn" data-msg="ูุงูุ ูุจุฏู ุฃู ุงูุทูุงุจ ูุฎุทุทูู ููููุจ ูุทูู ๐">ุชุฌูุณูู ุจูุฏูุก ูุชุฑุงูุจูู</button>
      <button class="choice-btn" data-msg="ุถุญูุชู ูุนููุ ุงูุฌู ูููุก ุจุงููุฑุญ ๐">ุชุจุฏุฃูู ุจุงููุฒุงุญ ูุนูู</button>
      <p id="screen-2-msg" style="min-height: 50px; margin-top: 20px; font-weight: bold;"></p>
      <button id="screen-2-next" class="hidden">ุงูุชุงูู</button>
    </div>

    <div id="screen-3" class="screen hidden">
      <h2>ุฃุญุฏ ุงูุทูุงุจ ุจุฏุฃ ูููู ุฃุดูุงุก ุบุฑูุจุฉ ููุญุงูู ููุงุฌุฆูโฆ ูุงุฐุง ุชูุนูููุ</h2>
      <button class="choice-btn" data-msg="ุงูุทูุงุจ ูุถุญููู ุจุตูุช ุนุงููุ ูุฃูุชู ูููุฉ ุงููุฒุญ ๐">ุชุฑุฏูู ุจููุชุฉ ุนูู ูุฒุงุญู</button>
      <button class="choice-btn" data-msg="ุงูุฌููุน ูุชุฑูุจ ุฑุฏุฉ ูุนููุ ูุงูุฌู ูููุก ุจุงูุชุดููู ๐">ุชุฌุงูููู ูุชูููู ุงูุฏุฑุณ</button>
      <p id="screen-3-msg" style="min-height: 50px; margin-top: 20px; font-weight: bold;"></p>
      <button id="screen-3-next" class="hidden">ุงูุชุงูู</button>
    </div>

    <div id="screen-4" class="screen hidden">
      <h2>ุงูุตู ูููุก ุจุงูุฃูุฑุงู ูุงูุฃููุงูุ ููุฌุฃุฉ ูุจุฏุฃ ุงูุทูุงุจ ุจุงูุชุนุงูู ูููุงุฌุฃุฉ ูุงโฆ</h2>
      <button class="choice-btn" data-msg="ุนูู ุฌูุงุนู ููุชุนุ ูุงูุถุญู ูููุฃ ุงูุตู ๐">ุชุดุงุฑููููู ุงูุชุฎุทูุท</button>
      <button class="choice-btn" data-msg="ุฎุทุฉ ุตุบูุฑุฉ ุชูุจุฑ ููููุง ุจุนุฏ ูููโฆ ุงููู ูุชุญูุณ!">ุชุฑุงูุจูู ูุชุจุชุณููู ุณุฑูุง</button>
      <p id="screen-4-msg" style="min-height: 50px; margin-top: 20px; font-weight: bold;"></p>
      <button id="screen-4-next" class="hidden">ุงูุชุงูู</button>
    </div>

    <div id="screen-5" class="screen hidden">
      <h2>ุงูุชุฑุจ ููุช ุงูููุงูุฉุ ููุงุฐุง ุณุชูุนููู ูุชุฎุชุชู ุงููุบุงูุฑุฉุ</h2>
      <button class="choice-btn" data-msg="ุถุญู ููุชุฏุ ุงูุทูุงุจ ูุณุชูุชุนูู ุจุฑุฏู ุงููุฑุญ ๐">ุชุณุฃูููู ุนู ุงูุทูุงุจ ุจุทุฑููุฉ ูุถุญูุฉ</button>
      <button class="choice-btn" data-msg="ุงูุถุญู ูุชุตุงุนุฏุ ูููุงุฌุฃุช ุตุบูุฑุฉ ุชุธูุฑ ูู ูู ุฒุงููุฉ ๐">ุชุฎุจุฑู ุงูุทูุงุจ ุจููุชุฉ ุนู ุงูุตู</button>
      <p id="screen-5-msg" style="min-height: 50px; margin-top: 20px; font-weight: bold;"></p>
      <button id="screen-5-next" class="hidden">ุงูุชุงูู</button>
    </div>

    <div id="screen-6" class="screen hidden">
      <h1>ูููุฐุง ุงูุชูุช ูุบุงูุฑุฉ ุงูููู ูู ุงูุตูโฆ</h1>
      <p style="font-size: 1.4rem; font-weight: bold; margin-bottom: 30px;">
        ุดูุฑุงู ุฃุณุชุงุฐุชูุง ุงูุบุงููุฉ ุนุฒูุฒุฉ ๐<br />
        ูุงุฌุฃูุงูู ูุจู ูุง ุชูุงุฌุฆููุง ๐<br />
        ูุฌูุฏู ูุนูุง ูุฌุนู ูู ููู ูููุก ุจุงููุฑุญ ูุงูุถุญู!
      </p>
      <button id="restart-btn">ุฅุนุงุฏุฉ ุงููุตุฉ</button>
    </div>
  </div>

<script>
  const laughSound = new Audio('https://actions.google.com/sounds/v1/human/laughing_giggle.ogg');
  const clapSound = new Audio('https://actions.google.com/sounds/v1/human/applause.ogg');

  const screens = [
    document.getElementById('screen-1'),
    document.getElementById('screen-2'),
    document.getElementById('screen-3'),
    document.getElementById('screen-4'),
    document.getElementById('screen-5'),
    document.getElementById('screen-6'),
  ];

  function showScreen(index) {
    screens.forEach((screen, i) => {
      screen.classList.toggle('hidden', i !== index);
    });
  }

  document.getElementById('start-btn').addEventListener('click', () => { showScreen(1); });

  function setupChoices(screenIndex) {
    const screen = screens[screenIndex];
    const buttons = screen.querySelectorAll('.choice-btn');
    const msgP = screen.querySelector('p[id$="-msg"]');
    const nextBtn = screen.querySelector('button[id$="-next"]');

    buttons.forEach(btn => {
      btn.addEventListener('click', () => {
        msgP.textContent = btn.getAttribute('data-msg');
        laughSound.currentTime = 0; laughSound.play();
        buttons.forEach(b => b.disabled = true);
        nextBtn.classList.remove('hidden');
      });
    });

    nextBtn.addEventListener('click', () => {
      nextBtn.classList.add('hidden');
      buttons.forEach(b => b.disabled = false);
      msgP.textContent = '';
      showScreen(screenIndex + 1);
    });
  }

  setupChoices(1);
  setupChoices(2);
  setupChoices(3);
  setupChoices(4);

  document.getElementById('restart-btn').addEventListener('click', () => { showScreen(0); });

  function createFloatingSymbol(symbol, color) {
    const el = document.createElement('div');
    el.textContent = symbol;
    el.style.color = color;
    el.className = 'floating';
    el.style.left = Math.random() * window.innerWidth + 'px';
    el.style.top = window.innerHeight + 20 + 'px';
    document.body.appendChild(el);
    setTimeout(() => el.remove(), 4000);
  }

  const endScreen = screens[5];
  const observer = new MutationObserver(() => {
    if (!endScreen.classList.contains('hidden')) {
      laughSound.play(); clapSound.play();
      let count = 0;
      const interval = setInterval(() => {
        createFloatingSymbol('โค๏ธ', '#e91e63');
        createFloatingSymbol('๐น', '#c2185b');
        count++; if(count > 15) clearInterval(interval);
      }, 250);
    }
  });
  observer.observe(endScreen, { attributes: true, attributeFilter: ['class'] });
</script>
</body>
</html>